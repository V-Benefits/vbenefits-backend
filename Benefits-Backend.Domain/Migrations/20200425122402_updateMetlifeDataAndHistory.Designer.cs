// <auto-generated />
using System;
using Benefits_Backend.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Benefits_Backend.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200425122402_updateMetlifeDataAndHistory")]
    partial class updateMetlifeDataAndHistory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("LandlineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.HistoricalMetlifeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CERT")
                        .HasColumnType("int");

                    b.Property<float>("Contribution")
                        .HasColumnType("real");

                    b.Property<bool>("EligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<float>("MaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewBalance")
                        .HasColumnType("real");

                    b.Property<float>("OldBalance")
                        .HasColumnType("real");

                    b.Property<float>("ProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("SepRound")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("SubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tenure")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedBalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedCERT")
                        .HasColumnType("int");

                    b.Property<float>("UpdatedContribution")
                        .HasColumnType("real");

                    b.Property<bool>("UpdatedEligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedHiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("UpdatedIncome")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedMaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UpdatedNewBalance")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedON")
                        .HasColumnType("datetime2");

                    b.Property<float>("UpdatedOldBalance")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedSepRound")
                        .HasColumnType("real");

                    b.Property<int>("UpdatedStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedSubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UpdatedTenure")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedVestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedVesting")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedWithdrawals")
                        .HasColumnType("real");

                    b.Property<float>("VestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("Vesting")
                        .HasColumnType("real");

                    b.Property<float>("Withdrawals")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("historicalMetlifeData");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.MetlifeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CERT")
                        .HasColumnType("int");

                    b.Property<float>("Contribution")
                        .HasColumnType("real");

                    b.Property<bool>("EligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<float>("MaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewBalance")
                        .HasColumnType("real");

                    b.Property<float>("OldBalance")
                        .HasColumnType("real");

                    b.Property<float>("ProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("SepRound")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("SubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tenure")
                        .HasColumnType("real");

                    b.Property<float>("VestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("Vesting")
                        .HasColumnType("real");

                    b.Property<float>("Withdrawals")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("metlifeData");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PhoneProgramRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RequestById")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestFor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestById");

                    b.ToTable("PhoneProgramRequests");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PhoneProgramRequest", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "RequestBy")
                        .WithMany()
                        .HasForeignKey("RequestById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
