// <auto-generated />
using System;
using Benefits_Backend.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Benefits_Backend.Domain.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200427091633_merg1")]
    partial class merg1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.AppSeetingHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppSettingId")
                        .HasColumnType("int");

                    b.Property<int>("ChangedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChangedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppSettingId");

                    b.HasIndex("ChangedById");

                    b.ToTable("AppSeetingHistory");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.AppSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSetting");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandlineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1991, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mohamed.Almokadem@vodafone.com",
                            FullName = "Mohamed AlMokadem",
                            LandlineNumber = "00226799126",
                            MobileNumber = "01015925905",
                            NationalId = "0000200230979239",
                            StaffId = "26018"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1993, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Hager@vodafone.com",
                            FullName = "Hager Ahmed",
                            LandlineNumber = "00226799126",
                            MobileNumber = "010133344555",
                            NationalId = "0000200230979239",
                            StaffId = "26782"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1992, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Mona@vodafone.com",
                            FullName = "Mona Fawzy",
                            LandlineNumber = "00224456126",
                            MobileNumber = "010133234588",
                            NationalId = "0000200230559449",
                            StaffId = "28896"
                        });
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.HistoricalMetlifeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CERT")
                        .HasColumnType("int");

                    b.Property<float>("Contribution")
                        .HasColumnType("real");

                    b.Property<bool>("EligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<float>("MaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewBalance")
                        .HasColumnType("real");

                    b.Property<float>("OldBalance")
                        .HasColumnType("real");

                    b.Property<float>("ProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("SepRound")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("SubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tenure")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedBalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedCERT")
                        .HasColumnType("int");

                    b.Property<float>("UpdatedContribution")
                        .HasColumnType("real");

                    b.Property<bool>("UpdatedEligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedHiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("UpdatedIncome")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedMaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("UpdatedName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UpdatedNewBalance")
                        .HasColumnType("real");

                    b.Property<DateTime>("UpdatedON")
                        .HasColumnType("datetime2");

                    b.Property<float>("UpdatedOldBalance")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedSepRound")
                        .HasColumnType("real");

                    b.Property<int>("UpdatedStaffId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedSubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("UpdatedTenure")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedVestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedVesting")
                        .HasColumnType("real");

                    b.Property<float>("UpdatedWithdrawals")
                        .HasColumnType("real");

                    b.Property<float>("VestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("Vesting")
                        .HasColumnType("real");

                    b.Property<float>("Withdrawals")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("historicalMetlifeData");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.MetlifeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BalanceAsOf28FebSimpleformula")
                        .HasColumnType("real");

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CERT")
                        .HasColumnType("int");

                    b.Property<float>("Contribution")
                        .HasColumnType("real");

                    b.Property<bool>("EligibilityBasedOnLastRound")
                        .HasColumnType("bit");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Income")
                        .HasColumnType("real");

                    b.Property<float>("MaxLoanAmount")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("NewBalance")
                        .HasColumnType("real");

                    b.Property<float>("OldBalance")
                        .HasColumnType("real");

                    b.Property<float>("ProrateContribution")
                        .HasColumnType("real");

                    b.Property<float>("SepRound")
                        .HasColumnType("real");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.Property<string>("SubBand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Tenure")
                        .HasColumnType("real");

                    b.Property<float>("VestedBalance")
                        .HasColumnType("real");

                    b.Property<float>("Vesting")
                        .HasColumnType("real");

                    b.Property<float>("Withdrawals")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("metlifeData");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PensionEnrollmentRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Band")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfMonthsToEnrollment")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PensionEnrollmentRules");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PensionEnrollmentRulesHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BandAfter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BandBefore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfMonthsToEnrollmentAfter")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfMonthsToEnrollmentBefore")
                        .HasColumnType("int");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedById");

                    b.ToTable("PensionEnrollmentRulesHistories");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PensionRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApprovedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("BeginingBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CurrentAvailableBalance")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CurrentyearContribution")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("LastRoundWithdrawal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("MaxWithdrawalAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("ProratedNewContribution")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("RejectedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedOn")
                        .HasColumnType("date");

                    b.Property<decimal>("VestingPercent")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("WithdrawalAmmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("YearsOfService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<bool>("isApproved")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RequestedById");

                    b.ToTable("PensionRequests");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PhoneProgramRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RequestById")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestFor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RequestById");

                    b.ToTable("PhoneProgramRequests");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.VestingRules", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromYear")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToYear")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VestingPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VestingRulesNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VestingRules");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.VestingRulesHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromYearAfter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromYearBefore")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToYearAfter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToYearBefore")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("VestingPercentageAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VestingPercentageBefore")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedById");

                    b.ToTable("VestingRulesHistories");
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.AppSeetingHistory", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.AppSetting", "AppSetting")
                        .WithMany("AppSeetingHistories")
                        .HasForeignKey("AppSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "ChangedBy")
                        .WithMany("AppSeetingHistories")
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PensionEnrollmentRulesHistory", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PensionRequest", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "RequestedBy")
                        .WithMany("PensionRequests")
                        .HasForeignKey("RequestedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.PhoneProgramRequest", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "RequestBy")
                        .WithMany()
                        .HasForeignKey("RequestById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Benefits_Backend.Domain.Entities.VestingRulesHistory", b =>
                {
                    b.HasOne("Benefits_Backend.Domain.Entities.Employee", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
